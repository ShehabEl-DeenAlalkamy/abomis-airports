parameters:
  - name: apiVersion
    type: string
    values:
      - apigeeapi
      - googleapi
  - name: buildStageName
    type: string
    default: Build
  - name: jobName
    type: string
    default: FunctionalTesting
  - name: displayName
    type: string
    default: Functional Testing
  - name: dependsOn
    type: object
    default: []
  - name: mandatoryTasks
    type: stepList
    default: []

jobs:
  - job: ${{ parameters.jobName }}
    displayName: ${{ parameters.displayName }}
    dependsOn:
      - ${{ each dependency in parameters.dependsOn }}:
          - ${{ dependency }}
    condition: eq(variables['integrationTestsArtifactsExists'], 'true')
    variables:
      - template: ../vars/${{ parameters.apiVersion }}-vars.yaml
      - name: integrationTestsArtifactsExists
        value: $[ stageDependencies.${{ parameters.buildStageName }}.ApigeeMvnBuild.outputs['ArtifactsStagingStep.Framework.Mvn.Artifacts.Integration'] ]
      - name: integrationTestsArtifactsName
        value: $[ stageDependencies.${{ parameters.buildStageName }}.ApigeeMvnBuild.outputs['ArtifactsStagingStep.Framework.Mvn.Artifacts.Integration.Name'] ]
    steps:
      - ${{ parameters.mandatoryTasks }}

      - checkout: self
        path: s/$(Build.Repository.Name)
        persistCredentials: true

      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: $(integrationTestsArtifactsName)
          path: $(Build.SourcesDirectory)/integration-artifacts
        displayName: Download $(integrationTestsArtifactsName)

      - task: Npm@1
        displayName: npm install
        inputs:
          command: install

      - bash: |
          readonly ADO_DEBUG_CMD="##[debug]"
          echo "${ADO_DEBUG_CMD}"creating "${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing/cucumber.      
          mkdir -p "${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing/cucumber
          echo "TEST_HOST=${ENV_GROUP} node node_modules/.bin/cucumber-js --publish-quiet ./integration-artifacts --format json:"${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing/cucumber/reports.json"
          TEST_HOST="${ENV_GROUP}" node node_modules/.bin/cucumber-js --publish-quiet ./integration-artifacts --format json:"${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing/cucumber/reports.json
          echo "TEST_HOST=${ENV_GROUP} node node_modules/.bin/cucumber-js --publish-quiet ./integration-artifacts --format html:"${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing/cucumber/reports.json"
          TEST_HOST="${ENV_GROUP}" node node_modules/.bin/cucumber-js --publish-quiet ./integration-artifacts --format html:"${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing/cucumber/reports.html
        displayName: "FT: Cucumber"
        env:
          ENV_GROUP: $(envGroup)

      - task: PublishBuildArtifacts@1
        displayName: "Publish: Functional Tests Results"
        inputs:
          pathToPublish: $(Build.ArtifactStagingDirectory)/functional-testing
          artifactName: functional-testing

      - bash: |
          readonly ADO_DEBUG_CMD="##[debug]"
          echo "${ADO_DEBUG_CMD}"deleting "${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing.
          rm -rf "${BUILD_ARTIFACTSTAGINGDIRECTORY}"/functional-testing
        displayName: Artifacts Cleaning
