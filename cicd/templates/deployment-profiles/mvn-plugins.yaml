parameters:
  - name: jobName
    type: string
    default: Deploy
  - name: displayName
    type: string
    default: Deploy API Proxy
  - name: artifactAlias
    type: string
  - name: artifactName
    type: string
  - name: environment
    type: string
  - name: dependsOn
    type: object
    default: []
  - name: mandatoryTasks
    type: stepList
    default: []
  - name: configList
    type: object
    default:
      - references
      - keystores
      - aliases
      - targetservers
      - keyvaluemaps
      - resourcefiles
      - apiproducts
      - developers
      - reports
      - flowhooks

jobs:
  - deployment: ${{ parameters.jobName }}
    displayName: ${{ parameters.displayName }}
    environment: ${{ parameters.environment }}
    dependsOn:
      - ${{ each dependency in parameters.dependsOn }}:
          - ${{ dependency }}
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ parameters.mandatoryTasks }}

            - download: ${{ parameters.artifactAlias }}
              artifact: ${{ parameters.artifactName }}
              displayName: Download ${{ parameters.artifactName }}

            - template: ../steps/export-scripts-path.yaml
              parameters:
                isReleaseFlow: true

            - script: |
                echo org      : "${ORG}"
                echo env      : "${ENV}"
                echo hostname : "${HOSTNAME}"
              displayName: Show Vars

            - task: CopyFiles@2
              displayName: Copy Artifacts to Build Sources Directory
              inputs:
                SourceFolder: $(Pipeline.Workspace)/${{ parameters.artifactAlias }}/${{ parameters.artifactName }}
                Contents: "**"
                TargetFolder: $(Build.SourcesDirectory)

            - bash: |
                readonly ADO_DEBUG_CMD="##[debug]"
                echo "${ADO_DEBUG_CMD}"generating sa.json key file.
                echo "${GCP_SA}" > sa.json
              displayName: Generate SA Key File
              env:
                GCP_SA: $(gcpServiceAccount)

            - task: Bash@3
              displayName: Generate Apigee Config Goals
              inputs:
                filePath: $(Framework.Config.PathToScripts)/gen-apigee-configs.sh
              env:
                CONFIG_LIST: ${{ convertToJson(parameters.configList) }}

            - task: Maven@3
              displayName: Create Configs
              inputs:
                mavenPomFile: "./pom.xml"
                mavenOptions: "-Xmx3072m"
                javaHomeOption: "JDKVersion"
                jdkVersionOption: "1.8"
                jdkArchitectureOption: "x64"
                publishJUnitResults: false
                options: -P googleapi -D org=$(org) -D env=$(env) -D sa=sa.json
                goals: $(Framework.Config.Mvn.ApigeeConfigGoals)

            - task: Maven@3
              displayName: Deploy Proxy Bundle
              inputs:
                mavenPomFile: "./pom.xml"
                mavenOptions: "-Xmx3072m"
                javaHomeOption: "JDKVersion"
                jdkVersionOption: "1.8"
                jdkArchitectureOption: "x64"
                publishJUnitResults: false
                options: -P googleapi -D org=$(org) -D env=$(env) -D sa=sa.json
                goals: apigee-enterprise:deploy

            - bash: |
                readonly ADO_DEBUG_CMD="##[debug]"
                [[ -f sa.json ]] && echo "${ADO_DEBUG_CMD}"deleting sa.json; rm -rf sa.json
              displayName: "Delete SA Key File"

  - template: ../jobs/functional-testing.yaml
    parameters:
      artifactAlias: ${{ parameters.artifactAlias }}
      artifactName: ${{ parameters.artifactName }}
      dependsOn:
        - Deploy
